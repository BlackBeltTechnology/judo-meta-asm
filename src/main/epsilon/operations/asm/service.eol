import "annotation.eol";

@cached
operation getAllStatelessOperations() : Collection {
    return ASM!EOperation.all.select(o | o.isStateless());
}

@cached
operation getAllMappedTransferObjectTypes() : Collection {
    return ASM!EClass.all.select(c | c.isMappedTransferObjectType());
}

@cached
operation ASM!EOperation isStateless() : Boolean {
    return asmUtils.annotatedAsFalse(self, "stateful");
}

@cached
operation ASM!EOperation isStateful() : Boolean {
    return asmUtils.annotatedAsTrue(self, "stateful");
}

@cached
operation ASM!EOperation isBound() : Boolean {
    return self.eContainingClass.isMappedTransferObjectType();
}

@cached
operation ASM!EClass isMappedTransferObjectType() : Boolean {
    return self.getEntityType().isDefined();
}

@cached
operation ASM!EClass getEntityType() : ASM!EClass {
    var entityTypeName = asmUtils.getExtensionAnnotationValue(self, "mappedEntityType", false);
    if (entityTypeName.isPresent()) {
        return asmUtils.resolve(entityTypeName.get()).orElse(null);
    } else {
        return null;
    }
}
